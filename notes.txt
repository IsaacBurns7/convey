notes: 
+ WebGL can replace canvas potentially here, and is far more powerful, 
yet more cumbersome and difficult to use. Use if doing 3d or want speed
- extra notes on WebGL vs Canvas
    merging the drawing API code and the rest (integration): similar
    ease of use:
    (with library) canvas = webGL
    (from scratch) webGL << canvas
    speed: webGL > canvas
    capabilities: webGL > canvas
    cost: webGL is much more expensive
    platform: very similar


potential way to architect the "controls" class - once game gets real big!
    interface Mode {
        handleInput(): void;
    }
    class BuildMode implements Mode {
        handleInput() {
            console.log("Building...");
        }
    }

    class AttackMode implements Mode {
        handleInput() {
            console.log("Attacking...");
        }
    }

    class ShieldingMode implements Mode {
        handleInput() {
            console.log("Shielding...");
        }
    }